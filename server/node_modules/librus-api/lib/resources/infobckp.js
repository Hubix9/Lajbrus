"use strict";
const _ = require("lodash");
const Resource = require("../tools.js").Resource
    , Librus = require("../api.js");

module.exports = class Info extends Resource {
  /**
   * Get notifications
   * https://synergia.librus.pl/uczen_index
   *
   * @returns {Promise}
   */
  getNotifications() {
    return this.api
      ._mapper(
          "uczen_index"
        , "#graphic-menu ul li"
        , ($, element) => {
          return parseInt($(element).children("a.button.counter").trim()) || 0;
        }
      )
      .then(array => {
        return _.zipObject(
          [ 'grades'
          , 'absence'
          , 'inbox'
          , 'services'
          , 'smsInfo'
          , 'announcements'
          , 'calendar'
          , 'homework'
          ], array);
      });
  }

  /**
   * Get grade info
   * https://synergia.librus.pl/przegladaj_oceny/szczegoly
   *
   * @param gradeId Grade ID
   * @returns {Promise}
   */
  getGrade(gradeId) {
    let parser = ($, table) => {
      let keys = [
          "grade"
        , "category"
        , "date"
        , "teacher"
        , "lesson"
        , "inAverage"
        , "multiplier"
        , "user"
        , "comment"
      ];

      switch($(table).find("th").length) {
        /** e.g. - */
        case 7:
          _.pullAt(keys, 5, 6);
          break;

        /** with multiplier 0 */
        case 8:
          _.pullAt(keys, 6);
          break;
      }

      let values = Librus.mapTableValues(table, keys);
      return "inAverage" in values
        ? _.assign(values, {
          inAverage: $(table).find("img").attr("src") === "/images/aktywne.png"
        })
        : values;
    };
    return this.api
      ._singleMapper(
          `przegladaj_oceny/szczegoly/${gradeId}`
        , ".container-background table.decorated.medium.center tbody"
        , parser
      );
  }

  /**
   * Get grades list
   * https://synergia.librus.pl/przegladaj_oceny/uczen
   *
   * @returns {Promise}
   */
  getGrades() {
    let parser = ($, row) => {
	//console.log($(row).html())
	var tbodyholder = []
	var helper = $(row).children("tbody");
	//var helper = $(row).each(function(index){$(helper[index]) = $(index).children("tbody")})
	//helper = $(helper).each(function(index){$(index).children("tr[class^='line']:not([name])")})
	
	console.log($(helper).html())	
	row = helper
	console.log("//////////////////////////////////////////////////////////////////")
      let children = $(row).children("td");

      /**
       * Get average from column text
       * @param colIndex  Column index
       * @returns {Number}
       */
      let average = colIndex => {
        return parseFloat($(children[colIndex]).text());
      };

      /**
       * Parse semester, get average and grades
       * @param startColumn
       */
      let semester = (startColumn) => {
        let grades =_.map($(children[startColumn]).children("span.grade-box"), element => {
          return {
              id: parseInt($(element).find("a").attr("href").match(/szczegoly\/(\d*)$/))
            , value: $(element).trim()
          };
        });
        return {
            grades: grades
          , tempAverage: average(startColumn + 1)
          , average: average(startColumn + 2)
        };
      };
      return {
          name: $(children[1]).trim()
        , semester: [
            semester(2)
          , semester(5)
        ]
        , tempAverage: average(8)
        , average: average(9)
      }
    };
    return this.api._mapper(
        "przegladaj_oceny/uczen"
      , "table.decorated.stretch"
      , parser
    );
  }
};
